<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="lab0.Variant9Test" tests="28" skipped="0" failures="0" errors="0" timestamp="2022-09-10T14:31:00" hostname="ZXC" time="0.058">
  <properties/>
  <testcase name="arrayTest[0]([I@5386659f, [ 2 10 ] count = 2)" classname="lab0.Variant9Test" time="0.008"/>
  <testcase name="arrayTest[1]([I@496bc455, [ ] count = 0)" classname="lab0.Variant9Test" time="0.001"/>
  <testcase name="arrayTest[2]([I@7188af83, [ 100 -92 10 2 -4 4 ] count = 6)" classname="lab0.Variant9Test" time="0.0"/>
  <testcase name="booleanTest[0](5, 1, true)" classname="lab0.Variant9Test" time="0.004"/>
  <testcase name="booleanTest[1](8, 7, true)" classname="lab0.Variant9Test" time="0.0"/>
  <testcase name="booleanTest[2](-100, 100, false)" classname="lab0.Variant9Test" time="0.001"/>
  <testcase name="forErrorTest" classname="lab0.Variant9Test" time="0.0"/>
  <testcase name="forTest[0](7, 9, 194)" classname="lab0.Variant9Test" time="0.001"/>
  <testcase name="forTest[1](1, 6, 91)" classname="lab0.Variant9Test" time="0.0"/>
  <testcase name="ifTest[0](312.123, -421.32, -421.32)" classname="lab0.Variant9Test" time="0.005"/>
  <testcase name="ifTest[1](3.14, 2.71, 2.71)" classname="lab0.Variant9Test" time="0.0"/>
  <testcase name="ifTest[2](10.321, 100.321312, 10.321)" classname="lab0.Variant9Test" time="0.0"/>
  <testcase name="inputTest[0](348, 3)" classname="lab0.Variant9Test" time="0.003"/>
  <testcase name="inputTest[1](213, 2)" classname="lab0.Variant9Test" time="0.0"/>
  <testcase name="inputTest[2](-718, -7)" classname="lab0.Variant9Test" time="0.0"/>
  <testcase name="negativeIntegerTest" classname="lab0.Variant9Test" time="0.0"/>
  <testcase name="switchErrorTest" classname="lab0.Variant9Test" time="0.0"/>
  <testcase name="switchTest[0](21, 6, 22 6)" classname="lab0.Variant9Test" time="0.005"/>
  <testcase name="switchTest[1](31, 12, 1 1)" classname="lab0.Variant9Test" time="0.001"/>
  <testcase name="switchTest[2](28, 2, 1 3)" classname="lab0.Variant9Test" time="0.001"/>
  <testcase name="switchTest[3](31, 1, 1 2)" classname="lab0.Variant9Test" time="0.0"/>
  <testcase name="twoDimensionArrayTest[0]([[I@72c8e7b, 34 98 -9 2 1 &#10;-98 8 1 5 3 )" classname="lab0.Variant9Test" time="0.001"/>
  <testcase name="twoDimensionArrayTest[1]([[I@431cd9b2, 4 5 6 &#10;10 11 12 )" classname="lab0.Variant9Test" time="0.0"/>
  <testcase name="whileErrorTest" classname="lab0.Variant9Test" time="0.001"/>
  <testcase name="whileTest[0](2, 1)" classname="lab0.Variant9Test" time="0.0"/>
  <testcase name="whileTest[1](3, 2)" classname="lab0.Variant9Test" time="0.0"/>
  <testcase name="whileTest[2](20, 3)" classname="lab0.Variant9Test" time="0.001"/>
  <testcase name="whileTest[3](100, 5)" classname="lab0.Variant9Test" time="0.0"/>
  <system-out><![CDATA[All even numbers in reverse and quantity of them: [ 2 10 ] count = 2
All even numbers in reverse and quantity of them: [ ] count = 0
All even numbers in reverse and quantity of them: [ 100 -92 10 2 -4 4 ] count = 6
Boolean task for 5 & 1 - true
Boolean task for 8 & 7 - true
Boolean task for -100 & 100 - false
7^2 + ... + 9^2 = 194
1^2 + ... + 6^2 = 91
If task new a,b: -421.32 312.123
If task new a,b: 2.71 3.14
If task new a,b: 10.321 100.321312
Integer task for 348 = 3
Integer task for 213 = 2
Integer task for -718 = -7
Case task: 21 6 -> 22 6
Case task: 31 12 -> 1 1
Case task: 28 2 -> 1 3
Case task: 31 1 -> 1 2
Array task:
34 98 -9 2 1 
-98 8 1 5 3 

Array task:
4 5 6 
10 11 12 

Min k which satisfies 3^k > 2 = 1
Min k which satisfies 3^k > 3 = 2
Min k which satisfies 3^k > 20 = 3
Min k which satisfies 3^k > 100 = 5
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
